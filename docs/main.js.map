{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXuD;AACd;;;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,wIAAgD,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC;KACrH;IACD;QACE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,4JAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAC1F,WAAW,EAAE,CAAC,kDAAS,CAAC;KACzB;IACD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,uDAAuD;CACxD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;ACVjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KAGjB;;wEAJY,YAAY;0GAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AAEF;AACT;AACN;AACqC;AACR;AAIzB;AACwB;AACb;AACuB;AACrC;AACK;;;;AAExC,SAAS,WAAW;IACzB,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAuCM,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAJb;QACT,kDAAS;QACT,+EAAW;KACZ,YA9BQ;YACP,oEAAa;YACb,iEAAgB;YAChB,uFAAoB;YACpB,uDAAW;YACX,+EAAiB;YACjB,kEAAgB;YAChB,0FAAuB;YACvB,6DAAoB,EAAE;YACtB,kEAAiB,CAAC;gBAChB,MAAM,EAAE;oBACN,WAAW,EAAE,WAAW;oBACxB,cAAc,EAAE,EAAE;oBAClB,UAAU,EAAE,SAAS;oBACrB,eAAe,EAAE,IAAI;iBACtB;aACF,CAAC;YAGF,qEAAqE;YACrE,0CAA0C;YAC1C,6DAA6D;YAC7D,0CAA0C;YAC1C,sDAAsD;YACtD,KAAK;SAEN;mIAOU,SAAS,mBAnClB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,uFAAoB;QACpB,uDAAW;QACX,+EAAiB;QACjB,kEAAgB;QAChB,0FAAuB;;;;;;;;;;;;;;;;;;;;;;;;ACtBpB,MAAM,SAAS;IACpB,eAAe;IACf,mCAAmC;IACnC,kHAAkH;IAClH,iBAAiB;IACjB,IAAI;IAEJ,YACU,MAAc,EACd,KAAkB,EAClB,aAA4B;QAF5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAa;QAClB,kBAAa,GAAb,aAAa,CAAe;IAClC,CAAC;IAIL,WAAW;QACT,IAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAC;YACzB,OAAO,IAAI,CAAC;SACb;aAAI;YAEH,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC;YAEhD,4CAA4C;YAE5C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;gBAC7C,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEA/BU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACRmC;AACc;AACD;AACG;AACwB;AACjC;;;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAuB;QAC5C,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uEAAe,EAAE;YAC7C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gFAAkB,EAAE;YAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,wGAA0B,EAAE;YAC/D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAiB,EAAE;YAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;SACtD;KACF;CAEF,CAAC;AAMK,MAAM,2BAA2B;;sGAA3B,2BAA2B;wHAA3B,2BAA2B;4HAH7B,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,2BAA2B,oFAF5B,yDAAY;;;;;;;;;;;;;;;;;;;;ACjBjB,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;QACN,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;8FANU,uBAAuB;qHAAvB,uBAAuB;QCPpC,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCgB;AAE+B;AACT;AACP;AACiC;AAChD;AACqB;AACG;AAElB;AACG;AACT;;;AA6BxC,MAAM,oBAAoB;IAC/B,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAChC,CAAC;;wFAFU,oBAAoB;iHAApB,oBAAoB;qHAhBtB;YACP,yDAAY;YACZ,uFAA2B;YAC3B,yDAAY;YACZ,gEAAmB;YACnB,mEAAgB;YAChB,0DAAS;YACT,0BAA0B;SAC3B;mIAQU,oBAAoB,mBAtB7B,8EAAuB;QACvB,uEAAe;QACf,wGAA0B;QAC1B,6EAAiB;QACjB,gFAAkB,aAGlB,yDAAY;QACZ,uFAA2B;QAC3B,yDAAY;QACZ,gEAAmB;QACnB,mEAAgB;QAChB,0DAAS,aAIT,uEAAe;QACf,wGAA0B;QAC1B,6EAAiB;QACjB,gFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;IE1BlB,yEAAmF;IAAA,sGAAiC;IAAA,4DAAK;;ADLtH,MAAM,iBAAiB;IAE5B,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAIhC,eAAU,GAAY,KAAK,CAAC;QAH1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC3D,CAAC;IAIF,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;;kFAbU,iBAAiB;+GAAjB,iBAAiB;QCR9B,yEAAmB;QACf,yEAA0B;QACtB,yEAAsB;QAClB,oEAA2D;QAC/D,4DAAM;QACV,4DAAM;QACN,yEAAyB;QACtB,qEAAI;QAAC,8EAAkB;QAAA,4DAAK;QAC/B,4DAAM;QACN,yEAAuB;QACnB,oEAAG;QAAC,6LACgD;QAAA,4DAAI;QAC5D,4DAAM;QACN,6GAAyH;QACzH,0EAAkB;QACd,2EAAgB;QACZ,0EAAmB;QACf,uEAAK;QAAA,wEAA+C;QAAA,4DAAM;QAC1D,uEAAK;QAAA,wEAA+C;QAAA,4DAAM;QAC1D,uEAAK;QAAA,wEAA+C;QAAA,4DAAM;QAC1D,uEAAK;QAAA,wEAA+C;QAAA,4DAAM;QAC9D,4DAAM;QACN,2EAAoB;QAChB,wEAAmD;QACvD,4DAAM;QACV,4DAAO;QACP,2EAAwB;QACpB,wEAAM;QAAA,6EAAY;QAAA,yEAA0C;QAApB,qIAAS,aAAS,IAAC;QAAC,wFAAuB;QAAA,4DAAI;QAAA,4DAAO;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjBG,2DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;ACJlB,MAAM,kBAAkB;IAE7B,YAAoB,MAAc,EAAU,KAAY;QAApC,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAO;QACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;;oFAXU,kBAAkB;gHAAlB,kBAAkB;QCT/B,yEAAmB;QACf,yEAA0B;QACtB,yEAAsB;QAClB,oEAA2D;QAC/D,4DAAM;QACV,4DAAM;QACN,yEAAyB;QACtB,qEAAI;QAAC,8EAAkB;QAAA,4DAAK;QAC/B,4DAAM;QACN,yEAAuB;QACnB,oEAAG;QAAC,0HAAoD;QAAA,4DAAI;QAChE,4DAAM;QACN,0EAAkB;QACd,2EAAgB;QACZ,0EAAmB;QACf,0EAAmB;QAAA,6EAAc;QAAA,+EAAmB;QAAA,4DAAQ;QAAA,4DAAM;QAClE,uEAAK;QAAA,wEAAkC;QAAA,4DAAM;QACjD,4DAAM;QACN,2EAAoB;QAChB,6EAAsD;QAAjC,0IAAS,WAAO,IAAC;QAAtC,4DAAsD;QAC1D,4DAAM;QACV,4DAAO;QACP,2EAAwB;QACpB,wEAAM;QAAA,yEAAuB;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAO;QACtD,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;ACnBC,MAAM,0BAA0B;IAErC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oGALU,0BAA0B;wHAA1B,0BAA0B;QCPvC,yEAAmB;QACf,yEAA0B;QACtB,yEAAsB;QAClB,oEAA2D;QAC/D,4DAAM;QACV,4DAAM;QACN,yEAAyB;QACtB,qEAAI;QAAC,mFAAuB;QAAA,4DAAK;QACpC,4DAAM;QACN,yEAAuB;QACnB,oEAAG;QAAC,iHAAgD;QAAA,iEAAI;QAAC,wEAAM;QAAA,qFAAyB;QAAA,4DAAO;QAAC,4DAAI;QACxG,4DAAM;QACN,0EAAkB;QACd,2EAAgB;QACZ,0EAAoB;QAChB,uEAAqD;QACzD,4DAAM;QACV,4DAAO;QACP,2EAAwB;QACpB,wEAAM;QAAA,oFAAmB;QAAA,yEAAiB;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAO;QACjE,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACnB2E;;;;;;;;;;ICWjE,sEAAoE;IAChE,4EAAsD;IAAA,8EAAc;IAAA,4DAAQ;IAChF,4DAAM;;;IAQN,sEAA0E;IACtE,4EAAsD;IAAA,gFAAgB;IAAA,4DAAQ;IAClF,4DAAM;;;IAGN,0EAA0C;IAC1C,uEAAM;IAAA,uDAAU;IAAA,4DAAO;IAC3B,4DAAM;;;IADI,0DAAU;IAAV,8EAAU;;ADdzB,MAAM,eAAe;IAQ1B,YACU,WAAwB,EACxB,YAAyB,EACzB,KAAY,EACZ,MAAc,EACd,IAAgB,EAChB,aAA4B;QAL5B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,UAAK,GAAL,KAAK,CAAO;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAe;QAXtC,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,EAAE,CAAC;QACnB,WAAM,GAAO,EAAE,CAAC;QAWd,uCAAuC;QACvC,sCAAsC;QACtC,wCAAwC;QACxC,MAAM;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC5D,CAAC;IAGD,QAAQ;QACN,uCAAuC;QACvC,eAAe;QACf,iBAAiB;QACjB,MAAM;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,qDAAS,CAAC;YACxB,OAAO,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACrE,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACvD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,gBAAgB;QAEhB,mBAAmB;IACrB,CAAC;IAED,gBAAgB;IAEhB,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAC1D,CAAC,QAAa,EAAE,EAAE;YAChB,yBAAyB;YAEzB,wDAAwD;YAExD,qCAAqC;YACrC,IAAG,QAAQ,CAAC,MAAM,EAAC;gBACjB,sDAAsD;gBACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE;oBAChD,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;aACnC;iBAAI;gBACH,IAAG,CAAC,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,YAAY,IAAI,EAAE,EAAC;oBACvD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,yCAAyC,CAAC,CAAC;iBAC9E;qBAAI;oBAIL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;oBAEhC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC;oBACpD,sCAAsC;oBAEtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAEjC,yCAAyC;oBAEzC,iEAAiE;oBACjE,sEAAsE;oBACtE,8DAA8D;oBAE9D,sBAAsB;iBAEvB;aACF;QACH,CAAC,EACD,CAAC,KAAU,EAAE,EAAE;YACb,4BAA4B;YAE5B,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,qCAAqC,EAAE,qBAAqB,EAAE;gBACrF,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,4BAA4B;YAC5B,6BAA6B;QAC/B,CAAC,CACA,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,OAAY,EAAE,EAAE;YACzE,wBAAwB;YACxB,IAAG,OAAO,CAAC,MAAM,EAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAC9B;iBAAI;gBACH,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;gBACtB,wBAAwB;aACzB;QACH,CAAC,CAAC,CAAC;QAEH,2BAA2B;QAC3B,oCAAoC;QAEpC,kCAAkC;QAClC,2BAA2B;QAC3B,mCAAmC;QACnC,YAAY;QACZ,MAAM;IACR,CAAC;;8EA1HU,eAAe;6GAAf,eAAe;QChB5B,yEAAmB;QACf,yEAA0B;QACtB,yEAAsB;QAClB,oEAAmE;QACvE,4DAAM;QACV,4DAAM;QACN,yEAAyB;QACtB,qEAAI;QAAC,mEAAO;QAAA,4DAAK;QACpB,4DAAM;QACN,yEAAkB;QACd,0EAAuD;QAApB,uIAAU,YAAQ,IAAC;QAClD,yEAAmB;QACf,0EAAmB;QAAA,4EAAc;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAM;QACrD,uEAAK;QAAA,wEAAkE;QAAA,4DAAM;QAC7E,8GAEM;QACV,4DAAM;QACN,0EAAmB;QACf,0EAAmB;QACf,4EAAc;QAAA,yEAAa;QAAA,4DAAQ;QACnC,wEAAM;QAAA,yEAAyB;QAAA,6EAAiB;QAAA,4DAAI;QAAA,4DAAO;QAC/D,4DAAM;QACN,uEAAK;QAAA,wEAA2E;QAAA,4DAAM;QACtF,8GAEM;QACV,4DAAM;QACN,uEAAK;QACD,8GAEE;QACN,4DAAM;QACN,2EAAsB;QAClB,wEAAkC;QAAC,6EAAmB;QAAC,wEAAW;QAAA,4DAAQ;QAC9E,4DAAM;QACN,2EAAoB;QAChB,8EAAgD;QAAA,2EAAe;QAAA,4DAAS;QAC5E,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QA/BkB,0DAAkB;QAAlB,+EAAkB;QAIpB,0DAA4D;QAA5D,gIAA4D;QAU5D,2DAAkE;QAAlE,sIAAkE;QAK5C,0DAAY;QAAZ,4EAAY;QAQhC,0DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;;;ACnCc;AACpB;AAEgB;;;AAKpD,MAAM,WAAW;IAEtB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG1B,iCAAiC;QAEzB,WAAM,GAAG,4EAAkB,CAAC;QAEpC,sEAAsE;QAE9D,aAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACzC,6EAA6E;QAC7E,uFAAuF;QAC/E,kBAAa,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvC,wBAAmB,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAUnD,wCAAwC;QACxC,+DAA+D;QAC/D,MAAM;QAEI,YAAO,GAAG,IAAI,6DAAW,CAAC;YAClC,eAAe,EAAE,UAAU,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;SAC3D,CAAC,CAAC;QAgBK,YAAO,GAAG,IAAI,yCAAO,EAAU,CAAC;IA5CpC,CAAC;IAcL,UAAU;QACR,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,IAAS;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAUD,oBAAoB;QAClB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC;YAC9B,eAAe,EAAE,UAAU,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;SAC3D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,mBAAmB,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU;QACR,iCAAiC;QACjC,gEAAgE;QAChE,MAAM;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;IAGD,eAAe,CAAC,OAAe;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;IAC5B,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;;sEAtDU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;ACRpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,wCAAwC;IACxC,MAAM,EAAE,iDAAiD;CAC1D,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACjBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/code-form/code-form.component.ts","./src/app/authentication/code-form/code-form.component.html","./src/app/authentication/email-form/email-form.component.ts","./src/app/authentication/email-form/email-form.component.html","./src/app/authentication/email-verification/email-verification.component.ts","./src/app/authentication/email-verification/email-verification.component.html","./src/app/authentication/sign-in/sign-in.component.ts","./src/app/authentication/sign-in/sign-in.component.html","./src/app/core-module/auth-service/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'auth', loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule), \r\n  },\r\n  {\r\n    path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' }\r\n  // { path: '', redirectTo: '/auth', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'admin';\r\n\r\n  // icon = faFacebookSquare;\r\n}\r\n","<router-outlet></router-outlet> ","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AuthenticationModule } from './authentication/authentication.module';\r\nimport { AuthService } from './core-module/auth-service/auth.service';\r\n\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './core-module/database/in-memory-data.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AuthenticationModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: [],\r\n        authScheme: \"Bearer \",\r\n        skipWhenExpired: true,\r\n      }\r\n    }),\r\n    \r\n\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    // HttpClientInMemoryWebApiModule.forRoot(\r\n    //   InMemoryDataService, { dataEncapsulation: false }\r\n    // ),\r\n\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n// import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './core-module/auth-service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  // canActivate(\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  //   return true;\r\n  // }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _auth: AuthService,\r\n    private toastrService: ToastrService\r\n    ){}\r\n  \r\n    message: string;\r\n\r\n  canActivate():boolean {\r\n    if(this._auth.isLoggedIn()){\r\n      return true;\r\n    }else{\r\n\r\n      this.message = 'Entre com as suas credenciais!';\r\n\r\n      // this._auth.setAuthMessages(this.message);\r\n\r\n      this.toastrService.error(this.message, 'Erro', {\r\n        timeOut: 3000,\r\n      });\r\n\r\n      this.router.navigate(['/login'])\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthenticationComponent } from './authentication.component';\r\nimport { CodeFormComponent } from './code-form/code-form.component';\r\nimport { EmailFormComponent } from './email-form/email-form.component';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '', component: AuthenticationComponent,\r\n    children: [\r\n      { path: 'login', component: SignInComponent },\r\n      { path: 'recover', component: EmailFormComponent },\r\n      { path: 'verification', component: EmailVerificationComponent },\r\n      { path: 'code', component: CodeFormComponent },\r\n      { path: '', redirectTo: '/login', pathMatch: 'full' }\r\n    ],\r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.css']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { AuthenticationComponent } from './authentication.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CodeFormComponent } from './code-form/code-form.component';\r\nimport { EmailFormComponent } from './email-form/email-form.component';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthenticationComponent,\r\n    SignInComponent,\r\n    EmailVerificationComponent,\r\n    CodeFormComponent,\r\n    EmailFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthenticationRoutingModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    JwtModule,\r\n    // ToastrModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    SignInComponent,\r\n    EmailVerificationComponent,\r\n    CodeFormComponent,\r\n    EmailFormComponent\r\n  ]\r\n})\r\nexport class AuthenticationModule { \r\n  constructor(private title: Title){\r\n  }\r\n }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-code-form',\r\n  templateUrl: './code-form.component.html',\r\n  styleUrls: ['./code-form.component.css']\r\n})\r\nexport class CodeFormComponent implements OnInit {\r\n\r\n  constructor(private title: Title) { \r\n    this.title.setTitle(\"Recuperar minha senha - Referência\");\r\n   }\r\n\r\n  codeResent: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  message(){\r\n    this.codeResent = true;\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"panel-header\">\r\n        <div class=\"logotype\">\r\n            <img width=\"40%\" src=\"assets/Logotipo/logotipo.svg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-title\">\r\n       <h1> Esqueceu a Senha? </h1>\r\n    </div>\r\n    <div class=\"paragraph\">\r\n        <p> Foi enviado um código de verificação para o seu e-mail.\r\n            Digite o código de e-mail no formulário abaixo..</p>\r\n    </div>\r\n    <h4 *ngIf=\"codeResent\" style=\"color: green; text-align: center; font-weight: 100;\">O código foi reenviado com êxito!</h4>\r\n    <div class=\"form\">\r\n        <form action=\"\">\r\n            <div class=\"input\">\r\n                <div><input type=\"text\" name=\"\" id=\"\" maxlength=\"1\"></div>\r\n                <div><input type=\"text\" name=\"\" id=\"\" maxlength=\"1\"></div>\r\n                <div><input type=\"text\" name=\"\" id=\"\" maxlength=\"1\"></div>\r\n                <div><input type=\"text\" name=\"\" id=\"\" maxlength=\"1\"></div>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <input type=\"submit\" value=\"Verificar minha conta\">\r\n            </div>\r\n        </form>\r\n        <div class=\"navigation\">\r\n            <span>Não recebi. <a routerLink=\"/code\" (click)=\"message()\">Reenviar um novo código</a></span>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-email-form',\r\n  templateUrl: './email-form.component.html',\r\n  styleUrls: ['./email-form.component.css']\r\n})\r\nexport class EmailFormComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private title: Title) { \r\n    this.title.setTitle(\"Recuperar minha senha - Referência\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  route(){\r\n    this.router.navigateByUrl('/code');\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"panel-header\">\r\n        <div class=\"logotype\">\r\n            <img width=\"40%\" src=\"assets/Logotipo/logotipo.svg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-title\">\r\n       <h1> Esqueceu a Senha? </h1>\r\n    </div>\r\n    <div class=\"paragraph\">\r\n        <p> Utilize o endereço de e-mail associado à sua conta. </p>\r\n    </div>\r\n    <div class=\"form\">\r\n        <form action=\"\">\r\n            <div class=\"input\">\r\n                <div class=\"label\"><label for=\"\">Digite o seu e-mail</label></div>\r\n                <div><input type=\"email\" name=\"\" id=\"\"></div>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <input type=\"button\" (click)=\"route()\" value=\"Enviar\">\r\n            </div>\r\n        </form>\r\n        <div class=\"navigation\">\r\n            <span><a routerLink=\"/login\">< Cancelar</a></span>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-email-verification',\r\n  templateUrl: './email-verification.component.html',\r\n  styleUrls: ['./email-verification.component.css']\r\n})\r\nexport class EmailVerificationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"panel-header\">\r\n        <div class=\"logotype\">\r\n            <img width=\"40%\" src=\"assets/Logotipo/logotipo.svg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-title\">\r\n       <h1> Verifique o seu e-mail </h1>\r\n    </div>\r\n    <div class=\"paragraph\">\r\n        <p> Enviamos um link para o seu endereço de e-mail: <br> <span>patisaquias2000@gmail.com</span> </p>\r\n    </div>\r\n    <div class=\"form\">\r\n        <form action=\"\">\r\n            <div class=\"submit\">\r\n                <input type=\"button\" value=\"Continuar a verificação\">\r\n            </div>\r\n        </form>\r\n        <div class=\"navigation\">\r\n            <span>Não recebi e-mail. <a routerLink=\"\">Reenviar</a></span>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core-module/auth-service/auth.service';\r\nimport { interval, Subscription, timer } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  \r\n  form: FormGroup;\r\n  incorrect = false;\r\n  panelMessages = '';\r\n  errors:any = '';\r\n  $subs: Subscription;\r\n\r\n  constructor(\r\n    private formbuilder: FormBuilder,\r\n    private _authService: AuthService,\r\n    private title: Title,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private toastrService: ToastrService,\r\n  ) { \r\n    // this.form = this.formbuilder.group({\r\n    //   email: ['', Validators.required],\r\n    //   password: ['', Validators.required]\r\n    // });\r\n    this.title.setTitle(\"Entrar na minha Conta - Referência\");\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.form = this.formbuilder.group({\r\n    //   email: '',\r\n    //   password: ''\r\n    // });\r\n\r\n    this.form = new FormGroup({\r\n      'email': new FormControl('', [Validators.required, Validators.email]),\r\n      'password': new FormControl('', [Validators.required])\r\n    });\r\n\r\n    this.getMessages();\r\n\r\n    // this.clear();\r\n\r\n    // this.form.dirty;\r\n  }\r\n\r\n  // pati@pati.com\r\n\r\n  submit(): void{\r\n    this._authService.login(this.form.getRawValue()).subscribe(\r\n    (response: any) => {\r\n      // console.log(response);\r\n      \r\n      // localStorage.setItem('token', response.access_token);\r\n\r\n      // this.router.navigate(['/admin/']);\r\n      if(response.status){\r\n        // this._authService.setAuthMessages(response.status);\r\n        this.incorrect = true;\r\n        \r\n        this.toastrService.error(response.status, 'Erro', {\r\n          timeOut: 3000,\r\n        });\r\n\r\n        this.form.get('email').reset();\r\n        this.form.get('password').reset();\r\n      }else{\r\n        if(!response.access_token || response.access_token == \"\"){\r\n          this._authService.setAuthMessages('Erro ao fazer o login, tente novamente!');\r\n        }else{\r\n\r\n          \r\n\r\n        this.form.get('email').reset();\r\n        this.form.get('password').reset();\r\n\r\n          localStorage.setItem('token', response.access_token)\r\n          // console.log(response.access_token);\r\n  \r\n          this.router.navigate(['/admin']);\r\n\r\n          // const helper = new JwtHelperService();\r\n\r\n          // const decodeToken = helper.decodeToken(response.access_token);\r\n          // const expir = helper.getTokenExpirationDate(response.access_token);\r\n          // const isexp = helper.isTokenExpired(response.access_token);\r\n\r\n          // console.log(isexp);\r\n          \r\n        }\r\n      }\r\n    }, \r\n    (error: any) => {\r\n      // console.log(error.error);\r\n\r\n      // this._authService.setAuthMessages(error);\r\n      this.toastrService.error(\"Verifique a sua conexão à internet.\", 'Erro de comunicação', {\r\n        timeOut: 3000,\r\n      });\r\n      this.incorrect = true;\r\n\r\n      // console.log(this.errors);\r\n      // this.errors = error.error;\r\n    }\r\n    );\r\n  }\r\n\r\n  getMessages(){\r\n    this.$subs = this._authService.getAuthMessage().subscribe((message: any) => {\r\n      // console.log(message);\r\n      if(message.status){\r\n        this.errors = message.status;\r\n      }else{\r\n        this.errors = message;\r\n        // console.log(message);\r\n      }\r\n    });\r\n\r\n    // console.log(this.$subs);\r\n    // const messageCount = timer(2000);\r\n\r\n    // messageCount.subscribe((c) => {\r\n    //   if(this.errors != ''){\r\n    //     // this.$subs.unsubscribe();\r\n    //   }else{}\r\n    // });\r\n  }\r\n}\r\n","<div class=\"panel\">\r\n    <div class=\"panel-header\">\r\n        <div class=\"logotype\">\r\n            <img width=\"40%\" src=\"assets/Logotipo/logotipo.svg\" alt=\"Logotipo\">\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-title\">\r\n       <h1> Entrar </h1>\r\n    </div>\r\n    <div class=\"form\">\r\n        <form action=\"\" [formGroup]=\"form\" (submit)=\"submit()\">\r\n            <div class=\"input\">\r\n                <div class=\"label\"><label for=\"\">E-mail</label></div>\r\n                <div><input type=\"email\" formControlName=\"email\" name=\"email\" required></div>\r\n                <div *ngIf=\"form.get('email').invalid && form.get('email').touched\">\r\n                    <label style=\"color: #f33;font-size: x-small;\" for=\"\">Email inválido</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"input\">\r\n                <div class=\"label\">\r\n                    <label for=\"\">Palavra-passe</label>\r\n                    <span><a routerLink=\"/recover\">Esqueceu a Senha?</a></span>\r\n                </div>\r\n                <div><input type=\"password\" formControlName=\"password\" name=\"password\" required></div>\r\n                <div *ngIf=\"form.get('password').invalid && form.get('password').touched\">\r\n                    <label style=\"color: #f33;font-size: x-small;\" for=\"\">Senha obigatória</label>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"panelMessages\" *ngIf=\"errors\">\r\n                <span>{{errors}}</span>\r\n            </div>\r\n            </div>\r\n            <div class=\"checkbox\">\r\n                <input type=\"checkbox\" id=\"check\"> <label for=\"check\"> Recordar-me</label>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <button [disabled]=\"form.invalid\" type=\"submit\">Entrar na conta</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UserModel } from '../models/user/user';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  // private userUrl = 'api/users';\r\n\r\n  private domain = environment.apiUrl;\r\n\r\n  // private domain = \"https://api-referencia.medesign-angola.com/api/\";\r\n\r\n  private loginUrl = this.domain + \"login\";\r\n  // private loginUrl = \"https://api-referencia.medesign-angola.com/api/login\";\r\n  // private userAuthenticatdUrl = \"https://api-referencia.medesign-angola.com/api/user\";\r\n  private userLogoutUrl = this.domain + \"logout\";\r\n  private userAuthenticatdUrl = this.domain + \"user\";\r\n\r\n  isLoggedIn():boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n  \r\n  login(user: any): Observable<UserModel>{\r\n    return this.http.post<UserModel>(this.loginUrl, user);\r\n  }\r\n\r\n  // protected headers = new HttpHeaders({\r\n  //   'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n  // });\r\n\r\n  protected headers = new HttpHeaders({\r\n    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n  });\r\n\r\n  getUserAuthenticated(){\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    return this.http.get<any>(this.userAuthenticatdUrl, {headers: headers});\r\n  }\r\n\r\n  userLogout(){\r\n    // let header = new HttpHeaders({\r\n    //   'Auth6orization': `Bearer ${localStorage.getItem('token')}`\r\n    // });\r\n    return this.http.post(this.userLogoutUrl, {headers: this.headers});\r\n  }\r\n\r\n  private subject = new Subject<string>();\r\n  setAuthMessages(message: string){\r\n    this.subject.next(message)\r\n  }\r\n  getAuthMessage(): Observable<string>{\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiUrl: 'http://127.0.0.1:8000/api/',\r\n  apiUrl: 'https://api-referencia.medesign-angola.com/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}